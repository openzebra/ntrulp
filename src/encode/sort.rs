#[cfg(feature = "ntrulpr1013")]
use crate::params::params1013::{P, Q, Q12, ROUNDED_BYTES, RQ_BYTES};
#[cfg(feature = "ntrulpr1277")]
use crate::params::params1277::{P, Q, Q12, ROUNDED_BYTES, RQ_BYTES};
#[cfg(feature = "ntrulpr653")]
use crate::params::params653::{P, Q, Q12, ROUNDED_BYTES, RQ_BYTES};
#[cfg(feature = "ntrulpr761")]
use crate::params::params761::{P, Q, Q12, ROUNDED_BYTES, RQ_BYTES};
#[cfg(feature = "ntrulpr857")]
use crate::params::params857::{P, Q, Q12, ROUNDED_BYTES, RQ_BYTES};
#[cfg(feature = "ntrulpr953")]
use crate::params::params953::{P, Q, Q12, ROUNDED_BYTES, RQ_BYTES};

pub fn min_max<const SIZE: usize>(arr: &mut [i32; SIZE], x: usize, y: usize) {
    if arr[y] < arr[x] {
        arr.swap(x, y);
    }
}

pub fn crypto_sort_i32<const SIZE: usize>(x: &mut [i32; SIZE]) {
    if SIZE < 2 {
        return;
    }

    let mut top = 1;
    while top < (SIZE - top) {
        top += top;
    }
    let mut p = top;
    while p > 0 {
        for i in 0..(SIZE - p) {
            if i & p == 0 {
                min_max::<SIZE>(x, i, i + p)
            }
        }
        let mut q = top;
        while q > p {
            for i in 0..(SIZE - q) {
                if i & p == 0 {
                    min_max::<SIZE>(x, i + p, i + q)
                }
            }
            q >>= 1;
        }
        p >>= 1;
    }
}

#[test]
fn test_crypto_sort() {
    let mut seed: [i32; 100] = [
        -1089450670,
        -570481005,
        1972060672,
        -2019721882,
        -787012832,
        2017475379,
        -952165884,
        -1444932016,
        -1663161031,
        -1663526260,
        -938847662,
        235980194,
        -306595422,
        1665882290,
        884845824,
        1275682515,
        71549078,
        672956865,
        1019073228,
        1719137988,
        2023049622,
        -1305542398,
        -122355092,
        -1618414612,
        -1374620025,
        -372575048,
        -1867596245,
        -299054989,
        -1556277117,
        -2139890963,
        -2144519452,
        -1782856765,
        526078388,
        1277360924,
        -158316968,
        -169977410,
        -1343661699,
        1796831836,
        -2077955420,
        1961673633,
        201660139,
        112541812,
        1627682387,
        -965047933,
        1917176985,
        2046505740,
        -1074763314,
        548680622,
        -1402168437,
        488935271,
        -1209812833,
        -532023805,
        -260201770,
        663148257,
        -168359181,
        -1391600404,
        -2101218828,
        1230180439,
        1811487057,
        -742214047,
        -215961360,
        -1471018873,
        97026779,
        655227708,
        -648283125,
        -1319263871,
        1205954566,
        -481208104,
        -1687759848,
        181255624,
        1779690387,
        -2034855712,
        1384360178,
        -1346905315,
        973287907,
        1471974172,
        755697217,
        -1967242225,
        1902726773,
        -236589196,
        -1124011733,
        -419272812,
        1397700135,
        -1318652469,
        -1743582035,
        1636255889,
        -1246531495,
        -1315739004,
        1750865221,
        86207279,
        278779199,
        85004661,
        1587665664,
        -77588311,
        520475674,
        414914972,
        128966103,
        643364965,
        -1047270247,
        1655524610,
    ];

    crypto_sort_i32(&mut seed);

    assert_eq!(
        seed,
        [
            -2144519452,
            -2139890963,
            -2101218828,
            -2077955420,
            -2034855712,
            -2019721882,
            -1967242225,
            -1867596245,
            -1782856765,
            -1743582035,
            -1687759848,
            -1663526260,
            -1663161031,
            -1618414612,
            -1556277117,
            -1471018873,
            -1444932016,
            -1402168437,
            -1391600404,
            -1374620025,
            -1346905315,
            -1343661699,
            -1319263871,
            -1318652469,
            -1315739004,
            -1305542398,
            -1246531495,
            -1209812833,
            -1124011733,
            -1089450670,
            -1074763314,
            -1047270247,
            -965047933,
            -952165884,
            -938847662,
            -787012832,
            -742214047,
            -648283125,
            -570481005,
            -532023805,
            -481208104,
            -419272812,
            -372575048,
            -306595422,
            -299054989,
            -260201770,
            -236589196,
            -215961360,
            -169977410,
            -168359181,
            -158316968,
            -122355092,
            -77588311,
            71549078,
            85004661,
            86207279,
            97026779,
            112541812,
            128966103,
            181255624,
            201660139,
            235980194,
            278779199,
            414914972,
            488935271,
            520475674,
            526078388,
            548680622,
            643364965,
            655227708,
            663148257,
            672956865,
            755697217,
            884845824,
            973287907,
            1019073228,
            1205954566,
            1230180439,
            1275682515,
            1277360924,
            1384360178,
            1397700135,
            1471974172,
            1587665664,
            1627682387,
            1636255889,
            1655524610,
            1665882290,
            1719137988,
            1750865221,
            1779690387,
            1796831836,
            1811487057,
            1902726773,
            1917176985,
            1961673633,
            1972060672,
            2017475379,
            2023049622,
            2046505740,
        ]
    );
}
